// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StructureEFSimple.DAL.Database;

#nullable disable

namespace StructureEFSimple.DAL.Migrations
{
    [DbContext(typeof(PersonneContext))]
    partial class PersonneContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StructureEFSimple.DAL.Entities.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ReferentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReferentId");

                    b.ToTable("Personne", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "Thierry"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "Marc",
                            ReferentId = 1
                        });
                });

            modelBuilder.Entity("StructureEFSimple.DAL.Entities.Personne", b =>
                {
                    b.HasOne("StructureEFSimple.DAL.Entities.Personne", "Referent")
                        .WithMany()
                        .HasForeignKey("ReferentId");

                    b.Navigation("Referent");
                });
#pragma warning restore 612, 618
        }
    }
}
